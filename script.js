/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is not neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./app.js":
/*!****************!*\
  !*** ./app.js ***!
  \****************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"App\": () => /* binding */ App\n/* harmony export */ });\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils */ \"./utils.js\");\n\r\n\r\nlet _instance;\r\n\r\nclass App {\r\n    constructor(canvas) {\r\n        this.canvas = canvas;\r\n\r\n        /** @type {Component[]} */\r\n        this._components = [];\r\n        this.ctx = canvas.getContext('2d', { alpha: false });\r\n        this.ctx.strokeStyle = '#222222';\r\n        this.ctx.fillStyle = '#7affd1';\r\n        this.ctx.font = '12px sans-serif';\r\n        this.lastHovered = null;\r\n        this.lastActivated = null;\r\n        this._init();\r\n    }\r\n\r\n    static get instance() {\r\n        return _instance || (i => _instance = i)(new App(document.getElementById('canvas')));\r\n    }\r\n\r\n    static onContextMenu(e) {\r\n        e.preventDefault();\r\n        return false;\r\n    }\r\n\r\n    /** @param {Component[]} components */\r\n    set components(components) {\r\n        this._components = components;\r\n    }\r\n\r\n    /** @returns {Component[]} */\r\n    get components() {\r\n        return this._components;\r\n    }\r\n\r\n    _init() {\r\n        this.canvas.addEventListener('mousemove', (0,_utils__WEBPACK_IMPORTED_MODULE_0__.throttle)().bind(undefined, this.onMouseMove.bind(this)));\r\n        this.canvas.addEventListener('mousedown', this.onMouseDown.bind(this));\r\n        this.canvas.addEventListener('mouseup', this.onMouseUp.bind(this));\r\n        this.canvas.addEventListener('contextmenu', App.onContextMenu);\r\n    }\r\n\r\n    dispatch(e) {\r\n        this.canvas.dispatchEvent(e);\r\n    }\r\n\r\n    listen(eventType, handler) {\r\n        this.canvas.addEventListener(eventType, handler);\r\n    }\r\n\r\n    unlisten(eventType, handler) {\r\n        this.canvas.removeEventListener(eventType, handler);\r\n    }\r\n\r\n    onMouseUp() {\r\n        this.lastActivated && this.lastActivated.onMouseUp();\r\n    }\r\n\r\n    onMouseDown({offsetX: x, offsetY: y, button}) {\r\n        let topMost;\r\n        for (let i = 0, zIndex = -1, items = this._components, length = items.length; i < length; i++) {\r\n            if (\r\n                items[i].zIndex > zIndex && (\r\n                    items[i].x < x &&\r\n                    items[i].y < y &&\r\n                    (items[i].x + items[i].width) > x &&\r\n                    (items[i].y + items[i].height) > y\r\n                )\r\n            ) {\r\n                topMost = items[i];\r\n                zIndex = topMost.zIndex;\r\n            }\r\n        }\r\n        !Object.is(topMost, this.lastActivated) &&\r\n            this.lastActivated &&\r\n                this.lastActivated.onBlur();\r\n        this.lastActivated = topMost;\r\n        topMost && (\r\n            button === 2 ?\r\n                topMost.onContextMenu({x, y}) : topMost.onMouseDown({x, y})\r\n        );\r\n    }\r\n\r\n    onMouseMove({offsetX: x, offsetY: y}) {\r\n        let topMost;\r\n        for (let i = 0, zIndex = -1, items = this._components, length = items.length; i < length; i++) {\r\n            if (\r\n                items[i].zIndex > zIndex && (\r\n                    items[i].x < x &&\r\n                    items[i].y < y &&\r\n                    (items[i].x + items[i].width) > x &&\r\n                    (items[i].y + items[i].height) > y\r\n                )\r\n            ) {\r\n                topMost = items[i];\r\n                zIndex = topMost.zIndex;\r\n            }\r\n        }\r\n        !Object.is(topMost, this.lastHovered) &&\r\n            this.lastHovered &&\r\n                this.lastHovered.onMouseOut();\r\n        this.lastHovered = topMost;\r\n        topMost && topMost.onMouseOver({x, y});\r\n    }\r\n\r\n    assignLastActivated(component) {\r\n        this.lastActivated && this.lastActivated.onBlur();\r\n        this.lastActivated = component;\r\n    }\r\n\r\n    repaintAffected({id, x, y, width, height, zIndex}) {\r\n        for (let i = 0, items = this._components, length = items.length; i < length; i++) {\r\n            if (\r\n                items[i].id !== id &&\r\n                items[i].zIndex > zIndex && (\r\n                    (\r\n                        items[i].y >= y && items[i].y <= (y + height) ||\r\n                        items[i].y <= y && (items[i].y + items[i].height) >= y\r\n                    ) && (\r\n                        items[i].x >= x && items[i].x <= (x + width) ||\r\n                        items[i].x <= x && (items[i].x + items[i].width) >= x\r\n                    )\r\n                )\r\n            ) {\r\n                items[i].render();\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        this.ctx.fillRect(0, 0, this.canvas.width, this.canvas.height);\r\n        for (let i = 0, items = this._components, length = items.length; i < length; i++) {\r\n            items[i].render();\r\n        }\r\n    }\r\n}\r\n\n\n//# sourceURL=webpack://canvas/./app.js?");

/***/ }),

/***/ "./components/button.js":
/*!******************************!*\
  !*** ./components/button.js ***!
  \******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Button\": () => /* binding */ Button\n/* harmony export */ });\n/* harmony import */ var _component__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./component */ \"./components/component.js\");\n/* harmony import */ var _app__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../app */ \"./app.js\");\n\r\n\r\n\r\nclass Button extends _component__WEBPACK_IMPORTED_MODULE_0__.Component {\r\n    constructor({value= 'Apply', callback = () => {}, ...params}) {\r\n        super(params);\r\n        this.name = 'Button';\r\n        this.pressed = false;\r\n        this.value = value;\r\n        this.fontSize = 12;\r\n        this.callback = callback;\r\n        const ctx = _app__WEBPACK_IMPORTED_MODULE_1__.App.instance.ctx;\r\n        ctx.save();\r\n            ctx.font = `bold ${this.fontSize}px sans-serif`;\r\n            Object.assign(this, Button.geometric, {width: ctx.measureText(value).width + 20});\r\n        ctx.restore();\r\n        this.x += Button.geometric.width - this.width - 2;\r\n    }\r\n\r\n    static get geometric() {\r\n        return {\r\n            width: 50,\r\n            height: 20\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @param {Object} o\r\n     * @param {CanvasRenderingContext2D} ctx\r\n     */\r\n    static render({x, y, width, height, value, fontSize, pressed, radius = 3}, ctx) {\r\n        ctx.fillRect(x - 3, y - 3, width + 9, height + 9);\r\n        ctx.save();\r\n            ctx.fillStyle = '#a2a2a2';\r\n            if (!pressed) {\r\n                ctx.fillStyle = '#b1b1b1';\r\n                ctx.shadowOffsetX = 2;\r\n                ctx.shadowOffsetY = 2;\r\n                ctx.shadowBlur = 2;\r\n                ctx.shadowColor = 'rgba(127,127,127,0.7)';\r\n            }\r\n            ctx.beginPath();\r\n            ctx.moveTo(x + radius, y);\r\n            ctx.lineTo(x + width - radius, y);\r\n            ctx.arcTo(x + width, y, x + width, y + radius, radius);\r\n            ctx.lineTo(x + width, y + height - radius);\r\n            ctx.arcTo(x + width, y + height, x + width - radius, y + height, radius);\r\n            ctx.lineTo(x + radius, y + height);\r\n            ctx.arcTo(x, y + height, x, y + height - radius, radius);\r\n            ctx.lineTo(x, y + radius);\r\n            ctx.arcTo(x, y, x + radius, y, radius);\r\n            ctx.fill();\r\n            if (pressed) {\r\n                ctx.strokeStyle = 'rgba(0, 0, 0, 0.5)';\r\n                ctx.lineWidth = 2;\r\n                ctx.beginPath();\r\n                ctx.moveTo(x + 2, y + 2 + height - radius);\r\n                ctx.lineTo(x + 2, y + 2 + radius);\r\n                ctx.arcTo(x + 2, y + 2, x + 2 + radius, y, radius);\r\n                ctx.lineTo(x + 2 + width - radius, y + 2);\r\n                ctx.stroke();\r\n            }\r\n        ctx.restore();\r\n        ctx.save();\r\n            ctx.fillStyle = '#353535';\r\n            ctx.font = `bold ${fontSize}px sans-serif`;\r\n            ctx.fillText(value, x + 10, y + height - 5);\r\n        ctx.restore();\r\n    }\r\n\r\n    onMouseOver() {\r\n        _app__WEBPACK_IMPORTED_MODULE_1__.App.instance.canvas.style.cursor = 'pointer';\r\n    }\r\n\r\n    onMouseOut() {\r\n        _app__WEBPACK_IMPORTED_MODULE_1__.App.instance.canvas.style.cursor = 'initial';\r\n    }\r\n\r\n    onMouseDown() {\r\n        super.onMouseDown();\r\n        this.pressed = true;\r\n        this.render();\r\n        this.callback();\r\n    }\r\n\r\n    onMouseUp() {\r\n        this.pressed = false;\r\n        this.render();\r\n    }\r\n\r\n    render() {\r\n        Button.render(this, _app__WEBPACK_IMPORTED_MODULE_1__.App.instance.ctx);\r\n        super.render();\r\n    }\r\n}\r\n\n\n//# sourceURL=webpack://canvas/./components/button.js?");

/***/ }),

/***/ "./components/chart-item.js":
/*!**********************************!*\
  !*** ./components/chart-item.js ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"ChartItem\": () => /* binding */ ChartItem\n/* harmony export */ });\n/* harmony import */ var _component__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./component */ \"./components/component.js\");\n/* harmony import */ var _app__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../app */ \"./app.js\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils */ \"./utils.js\");\n\r\n\r\n\r\n\r\nclass ChartItem extends _component__WEBPACK_IMPORTED_MODULE_0__.Component {\r\n    constructor(params) {\r\n        super(params);\r\n        this.name = 'ChartItem';\r\n        this.scale = 1;\r\n        this.throttle = (0,_utils__WEBPACK_IMPORTED_MODULE_2__.throttle)();\r\n        this.dataDrawAreaMap = [];\r\n        this.ctxMenuConfig = [\r\n            {\r\n                title: 'Zoom In',\r\n                children: [],\r\n                type: this.setScale.bind(this, 1.1)\r\n            },\r\n            {\r\n                title: 'Zoom Out',\r\n                children: [],\r\n                type: this.setScale.bind(this, 0.9)\r\n            },\r\n            {\r\n                title: 'Zoom Reset',\r\n                children: [],\r\n                type: this.resetScale.bind(this)\r\n            }\r\n        ];\r\n        this._init();\r\n    }\r\n\r\n    /**\r\n     * @param {Object} config\r\n     * @param {CanvasRenderingContext2D} ctx\r\n     */\r\n    static render(config, ctx) {\r\n        const chartMargin = 20;\r\n        const {x, y, width, height, padding, data: {points}} = config;\r\n        const chartArea = {\r\n            x: x + padding[3],\r\n            y: y + padding[0],\r\n            width: width - padding[1] - padding[3],\r\n            height: height - padding[0] - padding[2]\r\n        };\r\n        const {min, max} = ChartItem.normalizeRange(points);\r\n        const rangeScale = (chartArea.height - chartMargin) / (max - min);\r\n        const zeroLevel = Math.floor((chartArea.y + chartMargin / 2) + max * rangeScale);\r\n        ctx.save();\r\n            ctx.fillStyle = 'white';\r\n            ctx.fillRect(x, y, width, height);\r\n            ctx.fillStyle = 'rgba(127, 127, 127, 0.2)';\r\n            ctx.fillRect.apply(ctx, Object.values(chartArea));\r\n        ctx.restore();\r\n        ChartItem.drawXAxis({...config, ...chartArea}, ctx);\r\n        ChartItem.drawYAxis({...config, ...chartArea, ...{zeroLevel, rangeScale}}, ctx);\r\n        return ChartItem.drawData({...config, ...chartArea, ...{zeroLevel, rangeScale}}, ctx);\r\n    }\r\n\r\n    /**\r\n     * @param {Object} config\r\n     * @param {CanvasRenderingContext2D} ctx\r\n     */\r\n    static drawData({x, y, width, height, padding, scale, data: {points = [], margin = 0.2}, zeroLevel, rangeScale}, ctx) {\r\n        const dataDrawAreaMap = [...points];\r\n        ctx.save();\r\n            ctx.beginPath();\r\n            ctx.rect(x, y, width, height);\r\n            ctx.clip();\r\n            ctx.setTransform(1, 0, 0, 1, x, zeroLevel);\r\n            for (let i = 0,\r\n                     length = points.length,\r\n                     step = width / length,\r\n                     barWidth = step * (1 - margin),\r\n                     barHeight = -points[i].value * scale * rangeScale,\r\n                     xPos = step / 2 - barWidth / 2,\r\n                    fillStyle = points[i].value > 0 ? (\r\n                        points[i].highlighted ? '#006b00' : '#00ff00') :\r\n                        (points[i].highlighted ? '#810000' : '#ff0000');\r\n                 i < length;\r\n                 i++, xPos += step) {\r\n                fillStyle = points[i].value > 0 ? (\r\n                    points[i].highlighted ? '#006b00' : '#00ff00') :\r\n                    (points[i].highlighted ? '#810000' : '#ff0000');\r\n                barHeight = -points[i].value * scale * rangeScale;\r\n                ctx.fillStyle = fillStyle;\r\n                ctx.fillRect(xPos, 0, barWidth, -points[i].value * scale * rangeScale);\r\n                dataDrawAreaMap[i] = {\r\n                    ...dataDrawAreaMap[i],\r\n                    ...{\r\n                        x: xPos + x,\r\n                        y: Math.min(zeroLevel, zeroLevel + barHeight),\r\n                        width: barWidth,\r\n                        height: Math.abs(barHeight)\r\n                    }\r\n                };\r\n            }\r\n        ctx.restore();\r\n        return dataDrawAreaMap;\r\n    }\r\n\r\n    /**\r\n     * @param {Object} config\r\n     * @param {CanvasRenderingContext2D} ctx\r\n     */\r\n    static drawXAxis({x, y, width, height, data: {points}}, ctx) {\r\n        ctx.save();\r\n            ctx.strokeStyle = '#3c3c3c';\r\n            ctx.fillStyle = '#3c3c3c';\r\n            ctx.beginPath();\r\n            ctx.moveTo(x, y + height + 5);\r\n            ctx.lineTo(x, y);\r\n            ctx.stroke();\r\n            ctx.strokeStyle = 'rgba(160, 160, 160, 0.5)';\r\n            for (let i = 0,\r\n                     step = width  / points.length,\r\n                     xPos = x + step / 2,\r\n                     roundedXPos = Math.round(xPos);\r\n                 i < points.length;\r\n                 i++, xPos += step, roundedXPos = Math.round(xPos)) {\r\n                ctx.beginPath();\r\n                ctx.moveTo(roundedXPos, y + height + 5);\r\n                ctx.lineTo(roundedXPos, y);\r\n                ctx.stroke();\r\n                ctx.save();\r\n                    ctx.font = '10px sans-serif';\r\n                    ctx.setTransform(1, 0, 0, 1, roundedXPos + 5, y + height + ctx.measureText(points[i].category).width + 5)\r\n                    ctx.rotate(-Math.PI / 2);\r\n                    ctx.fillText(points[i].category, 0, 0);\r\n                ctx.restore();\r\n            }\r\n        ctx.restore();\r\n    }\r\n\r\n    /**\r\n     * @param {Object} config\r\n     * @param {CanvasRenderingContext2D} ctx\r\n     */\r\n    static drawYAxis({x, y, width, height, ticks = 5, zeroLevel, scale, rangeScale, data: {points}}, ctx) {\r\n        ctx.save();\r\n            ctx.strokeStyle = 'rgba(160, 160, 160, 0.5)';\r\n            ctx.fillStyle = '#1a1a1a';\r\n            ctx.font = 'bold 14px sans-serif';\r\n            const interval = Math.floor(height / ticks);\r\n            for (let i = 0,\r\n                     yPos = y + height - Math.abs(zeroLevel - y - height) % interval,\r\n                     label = ((zeroLevel - yPos) / rangeScale / scale).toFixed(2);\r\n                 i < ticks;\r\n                 yPos -= interval,\r\n                 i++, label = ((zeroLevel - yPos ) / rangeScale / scale).toFixed(2)) {\r\n                ctx.beginPath();\r\n                ctx.moveTo(x - 5, yPos);\r\n                ctx.lineTo(x + width, yPos);\r\n                ctx.stroke();\r\n                ctx.fillText(label, x - ctx.measureText(label).width - 10, yPos);\r\n            }\r\n        ctx.restore();\r\n    }\r\n\r\n    static normalizeRange(data) {\r\n        return data.reduce(({min, max, maxNegative, minPositive}, {value}) => (\r\n            {\r\n                min: Math.min(value, min),\r\n                max: Math.max(value, max)\r\n            }\r\n        ), {\r\n            min: Infinity,\r\n            max: -Infinity\r\n        });\r\n    }\r\n\r\n    static mockData() {\r\n        return new Array(30).fill([1, -1]).map((bi, idx) => (\r\n            {\r\n                category: `Category${idx + 1}`,\r\n                value: Math.floor(Math.random() * 10000* bi[Math.round(Math.random())]) / 100,\r\n            }\r\n        ))\r\n    }\r\n\r\n    _init() {\r\n        _app__WEBPACK_IMPORTED_MODULE_1__.App.instance.listen('randomizeChartData', this);\r\n    }\r\n\r\n    onMouseOver() {\r\n        _app__WEBPACK_IMPORTED_MODULE_1__.App.instance.listen('mousemove', this);\r\n    }\r\n\r\n    onMouseOut() {\r\n        _app__WEBPACK_IMPORTED_MODULE_1__.App.instance.unlisten('mousemove', this);\r\n    }\r\n\r\n    render() {\r\n        this.data.points = ChartItem.render(this, _app__WEBPACK_IMPORTED_MODULE_1__.App.instance.ctx);\r\n        super.render();\r\n    }\r\n\r\n    resetScale() {\r\n        this.scale = 1;\r\n    }\r\n\r\n    setScale(scale = 1) {\r\n        this.scale *= scale;\r\n        this.render();\r\n    }\r\n\r\n    highlightItems({x, y}) {\r\n        let highlighted = null;\r\n        this.tooltipContent = '';\r\n        super.onMouseOut();\r\n        this.data.points.forEach(i => {\r\n            const {x: itemX, y: itemY, width, height} = i;\r\n            i.highlighted = itemX < x &&\r\n                                itemY < y &&\r\n                                    (itemX + width) > x &&\r\n                                        (itemY + height) > y;\r\n            if (i.highlighted) highlighted = i;\r\n        });\r\n        this.render();\r\n        if (highlighted) {\r\n            this.tooltipContent = highlighted.value;\r\n            clearTimeout(this.tooltipTimeout);\r\n            this.tooltipTimeout = setTimeout(this.initTooltip.bind(this), 500, {...this, ...{x, y}});\r\n        }\r\n    }\r\n\r\n    handleEvent({type, offsetX: x, offsetY: y}) {\r\n        switch (type) {\r\n            case 'mousemove':\r\n                this.throttle(this.highlightItems.bind(this), {x, y});\r\n                break;\r\n            case 'randomizeChartData':\r\n                this.data.points = ChartItem.mockData();\r\n                this.render();\r\n                break;\r\n            default:\r\n        }\r\n    }\r\n}\r\n\n\n//# sourceURL=webpack://canvas/./components/chart-item.js?");

/***/ }),

/***/ "./components/clock.js":
/*!*****************************!*\
  !*** ./components/clock.js ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Clock\": () => /* binding */ Clock\n/* harmony export */ });\n/* harmony import */ var _component__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./component */ \"./components/component.js\");\n/* harmony import */ var _app__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../app */ \"./app.js\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils */ \"./utils.js\");\n\r\n\r\n\r\n\r\nclass Clock extends _component__WEBPACK_IMPORTED_MODULE_0__.Component {\r\n    constructor(params) {\r\n        super(params);\r\n        this.name = 'Clock';\r\n        this.value = this.tooltipContent = '';\r\n        this.fontSize = 20;\r\n        Object.assign(this, Clock.geometric);\r\n        this._init();\r\n    }\r\n\r\n    static get geometric() {\r\n        return {\r\n            width: 30,\r\n            height: 20\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @param {Object} config\r\n     * @param {CanvasRenderingContext2D} ctx\r\n     */\r\n    static render({x, y, width, height, value, fontSize}, ctx) {\r\n        ctx.fillRect(x, y, width, height);\r\n        ctx.save();\r\n\t\t\tctx.fillStyle = '#161616';\r\n\t\t\tctx.font = `bold ${fontSize}px sans-serif`;\r\n\t\t\tconst fontHeight = ctx.measureText(value).actualBoundingBoxAscent;\r\n\t\t\tctx.fillText(value, x + 1, y + fontHeight + 5);\r\n        ctx.restore();\r\n    }\r\n\r\n    _init() {\r\n        const ctx = _app__WEBPACK_IMPORTED_MODULE_1__.App.instance.ctx;\r\n        setInterval(this.onValueChange.bind(this), 1000);\r\n        this.setValue((0,_utils__WEBPACK_IMPORTED_MODULE_2__.timeFormat)(Date.now()));\r\n        ctx.save();\r\n            ctx.font = `bold ${this.fontSize}px sans-serif`;\r\n            this.width = Math.ceil(ctx.measureText(this.value).width) + 1;\r\n        ctx.restore();\r\n        this.x = _app__WEBPACK_IMPORTED_MODULE_1__.App.instance.canvas.width - this.width;\r\n    }\r\n\r\n    onMouseOver(pos) {\r\n        clearTimeout(this.tooltipTimeout);\r\n        this.tooltipTimeout = setTimeout(this.initTooltip.bind(this), 500, {...this, ...pos});\r\n    }\r\n\r\n    onMouseOut() {\r\n        clearTimeout(this.tooltipTimeout);\r\n        _app__WEBPACK_IMPORTED_MODULE_1__.App.instance.dispatch(new CustomEvent('hideTooltip'));\r\n    }\r\n\r\n    setValue(value) {\r\n        this.value = this.tooltipContent = value;\r\n        this.render();\r\n    }\r\n\r\n    onValueChange() {\r\n        this.setValue((0,_utils__WEBPACK_IMPORTED_MODULE_2__.timeFormat)(Date.now()));\r\n    }\r\n\r\n    render() {\r\n        Clock.render(this, _app__WEBPACK_IMPORTED_MODULE_1__.App.instance.ctx);\r\n        super.render();\r\n    }\r\n}\r\n\n\n//# sourceURL=webpack://canvas/./components/clock.js?");

/***/ }),

/***/ "./components/collection-item.js":
/*!***************************************!*\
  !*** ./components/collection-item.js ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"CollectionItem\": () => /* binding */ CollectionItem\n/* harmony export */ });\n/* harmony import */ var _component__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./component */ \"./components/component.js\");\n/* harmony import */ var _app__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../app */ \"./app.js\");\n/* harmony import */ var _value_item__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./value-item */ \"./components/value-item.js\");\n\r\n\r\n\r\n\r\nclass CollectionItem {\r\n\r\n    /** @returns {Component[]} */\r\n    static compose({x, y, cols, rows, gap = 20, ctor}) {\r\n        const {width, height} = ctor.geometric;\r\n        return new Array(rows).fill(_app__WEBPACK_IMPORTED_MODULE_1__.App.instance.ctx).reduce((result, ctx, row) => (\r\n            [\r\n                ...result,\r\n                ...new Array(cols).fill(ctor).map((ctor, col) => {\r\n                    const [id, xPos, yPos, zIndex] = [\r\n                        _component__WEBPACK_IMPORTED_MODULE_0__.Component.nextId,\r\n                        x + col * (width + gap),\r\n                        y + row * (height + gap),\r\n                        (row + 1) * (col + 1)\r\n                    ];\r\n                    const instance = new ctor({id, x: xPos, y: yPos, value: _value_item__WEBPACK_IMPORTED_MODULE_2__.ValueItem.randomValue, zIndex, ctx});\r\n                    instance.initRandomChange();\r\n                    return instance;\r\n                })\r\n            ]\r\n        ), []);\r\n    }\r\n}\r\n\n\n//# sourceURL=webpack://canvas/./components/collection-item.js?");

/***/ }),

/***/ "./components/combo-box.js":
/*!*********************************!*\
  !*** ./components/combo-box.js ***!
  \*********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"ComboBox\": () => /* binding */ ComboBox\n/* harmony export */ });\n/* harmony import */ var _component__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./component */ \"./components/component.js\");\n/* harmony import */ var _app__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../app */ \"./app.js\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils */ \"./utils.js\");\n\r\n\r\n\r\n\r\nclass ComboBox extends _component__WEBPACK_IMPORTED_MODULE_0__.Component {\r\n    constructor({width = ComboBox.geometric.width, menuItems = [], variableName, ...params}) {\r\n        super(params);\r\n        this.name = 'ComboBox';\r\n        this.opened = false;\r\n        Object.assign(this, ComboBox.geometric, {width});\r\n        this.throttle = (0,_utils__WEBPACK_IMPORTED_MODULE_2__.throttle)();\r\n        this.variable = {\r\n            name: variableName,\r\n            value: null,\r\n            title: 'Select...'\r\n        };\r\n        this.menuItems = menuItems.map((i, idx) => ({\r\n            ...i,\r\n            ...{\r\n                y: this.y + this.height + idx * this.height,\r\n                height: this.height,\r\n                highlighted: false\r\n            }\r\n        }));\r\n        this.triggerArea = {\r\n            x: this.x + width - 20,\r\n            y: this.y,\r\n            width: 20,\r\n            height: this.height\r\n        }\r\n        this.fullHeight = this.height + menuItems.length * 20;\r\n    }\r\n\r\n    static get geometric() {\r\n        return {\r\n            width: 70,\r\n            height: 20\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @param {Object} config\r\n     * @param {CanvasRenderingContext2D} ctx\r\n     */\r\n    static render({x, y, width, height, fullHeight, opened, variable: {title}, menuItems}, ctx) {\r\n        const borderColor = '#808080';\r\n        const fontColor = '#242424';\r\n        const backgroundColor = '#c8c8c8';\r\n        const highlightColor = '#8d8d8d';\r\n        ctx.fillRect(x - 2, y - 2, width + 3, fullHeight + 3);\r\n        ctx.save();\r\n            ctx.fillStyle = fontColor;\r\n            ctx.strokeStyle = borderColor;\r\n            ctx.font = 'bold 12px sans-serif';\r\n            ctx.strokeRect(x, y, width, height);\r\n            ctx.save();\r\n                ctx.beginPath();\r\n                ctx.rect(x, y, x + width - height, height);\r\n                ctx.clip();\r\n                ctx.fillText(title, x + 3, y + height - 5);\r\n            ctx.restore();\r\n            ctx.save();\r\n                ctx.fillStyle = backgroundColor;\r\n                ctx.fillRect(x + width - height, y, height, height);\r\n                ctx.font = '12px Webdings';\r\n                ctx.fillStyle = fontColor;\r\n                ctx.fillText(opened ? '5' : '6', x + width - height / 2 - 5, y + height - 6);\r\n            ctx.restore();\r\n            if (!opened) return ctx.restore();\r\n            for (let i = 0,\r\n                     length = menuItems.length,\r\n                     yPos = y + height + 1,\r\n                     fontHeight = ctx.measureText(menuItems[i].title).actualBoundingBoxAscent,\r\n                     textYPos = (height - fontHeight) / 2 + fontHeight;\r\n                 i < length; i++, yPos = y + height + 1 + height * i) {\r\n                ctx.fillStyle = menuItems[i].highlighted ? highlightColor : backgroundColor;\r\n                ctx.fillRect(x, yPos, width, height);\r\n                ctx.fillStyle = fontColor;\r\n                ctx.fillText(menuItems[i].title, x + 3, yPos + textYPos);\r\n            }\r\n        ctx.restore();\r\n    }\r\n\r\n    onMouseOver({x, y}) {\r\n        _app__WEBPACK_IMPORTED_MODULE_1__.App.instance.canvas.style.cursor = (\r\n            this.triggerArea.x > x ||\r\n            this.triggerArea.y > y ||\r\n            (this.triggerArea.x + this.triggerArea.width) < x ||\r\n            (this.triggerArea.y + this.triggerArea.height) < y\r\n        ) ? 'initial' : 'pointer';\r\n    }\r\n\r\n    onMouseOut() {\r\n        _app__WEBPACK_IMPORTED_MODULE_1__.App.instance.canvas.style.cursor = 'initial';\r\n    }\r\n\r\n    onBlur() {\r\n        this.opened = false;\r\n        this.render();\r\n        _app__WEBPACK_IMPORTED_MODULE_1__.App.instance.unlisten('mousemove', this);\r\n    }\r\n\r\n    onMouseDown({x, y}) {\r\n        super.onMouseDown({x, y});\r\n        if (\r\n            this.triggerArea.x > x ||\r\n            this.triggerArea.y > y ||\r\n            (this.triggerArea.x + this.triggerArea.width) < x ||\r\n            (this.triggerArea.y + this.triggerArea.height) < y\r\n        ) return;\r\n        this.opened = !this.opened;\r\n        this.render();\r\n        this.opened ? (\r\n            _app__WEBPACK_IMPORTED_MODULE_1__.App.instance.listen('mousemove', this) ||\r\n            _app__WEBPACK_IMPORTED_MODULE_1__.App.instance.listen('mousedown', this)\r\n        ) : (\r\n            _app__WEBPACK_IMPORTED_MODULE_1__.App.instance.unlisten('mousemove', this) ||\r\n            _app__WEBPACK_IMPORTED_MODULE_1__.App.instance.unlisten('mousedown', this)\r\n        );\r\n    }\r\n\r\n    onMenuSelect({offsetX: x, offsetY: y}) {\r\n        if (\r\n            this.triggerArea.x < x &&\r\n            this.triggerArea.y < y &&\r\n            (this.triggerArea.x + this.triggerArea.width) > x &&\r\n            (this.triggerArea.y + this.triggerArea.height) > y\r\n        ) return;\r\n        const selectedItem = this.menuItems.find(({y: menuY, height}) => (\r\n            this.x < x &&\r\n            menuY < y &&\r\n            (this.x + this.width) > x &&\r\n            (menuY + height) > y\r\n        ));\r\n        this.hideMenu();\r\n        selectedItem && (this.setValue(selectedItem) || this.render());\r\n    }\r\n\r\n    hideMenu() {\r\n        this.opened = false;\r\n        this.render();\r\n    }\r\n\r\n    render() {\r\n        ComboBox.render(this, _app__WEBPACK_IMPORTED_MODULE_1__.App.instance.ctx);\r\n        super.render({...this, ...{height: this.fullHeight}});\r\n    }\r\n\r\n    highlightItems({offsetX: x, offsetY: y}) {\r\n        this.menuItems.forEach(i => {\r\n            const {y: itemY, height} = i;\r\n            i.highlighted = this.x < x &&\r\n                itemY < y &&\r\n                (this.x + this.width) > x &&\r\n                (itemY + height) > y;\r\n        });\r\n        this.render();\r\n    }\r\n\r\n    setValue({title, value}) {\r\n        Object.assign(this.variable, {title, value});\r\n        _app__WEBPACK_IMPORTED_MODULE_1__.App.instance.dispatch(new CustomEvent('updateLocalVariable', {detail: this.variable}));\r\n    }\r\n\r\n    handleEvent(e) {\r\n        switch (e.type) {\r\n            case 'mousedown':\r\n                this.onMenuSelect(e);\r\n                break;\r\n            case 'mousemove':\r\n                this.throttle(this.highlightItems.bind(this), e);\r\n                break;\r\n            default:\r\n        }\r\n    }\r\n}\r\n\n\n//# sourceURL=webpack://canvas/./components/combo-box.js?");

/***/ }),

/***/ "./components/component.js":
/*!*********************************!*\
  !*** ./components/component.js ***!
  \*********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Component\": () => /* binding */ Component\n/* harmony export */ });\n/* harmony import */ var _app__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../app */ \"./app.js\");\n/* harmony import */ var _context_menu__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./context-menu */ \"./components/context-menu.js\");\n/* harmony import */ var _tooltip__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./tooltip */ \"./components/tooltip.js\");\n/* harmony import */ var _hover__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./hover */ \"./components/hover.js\");\n\r\n\r\n\r\n\r\n\r\nlet _id = 0;\r\n\r\nclass Component {\r\n    constructor(params) {\r\n        this.visible = true;\r\n        this.zIndex = -1;\r\n        this.x = 0;\r\n        this.y = 0;\r\n        this.width = 0;\r\n        this.height = 0;\r\n        this.ctxMenuConfig = [\r\n            {\r\n                title: 'Move',\r\n                children: [\r\n                    {\r\n                        title: 'Horizontally',\r\n                        children: [\r\n                            {\r\n                                title: 'Left',\r\n                                type: this.translate.bind(this, {x: -20})\r\n                            },\r\n                            {\r\n                                title: 'Right',\r\n                                type: this.translate.bind(this, {x: 20})\r\n                            }\r\n                        ]\r\n                    },\r\n                    {\r\n                        title: 'Vertically',\r\n                        children: [\r\n                            {\r\n                                title: 'Up',\r\n                                type: this.translate.bind(this, {y: -20})\r\n                            },\r\n                            {\r\n                                title: 'Down',\r\n                                type: this.translate.bind(this, {y: 20})\r\n                            }\r\n                        ]\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                title: 'Resize',\r\n                children: [\r\n                    {\r\n                        title: 'X',\r\n                        children: [\r\n                            {\r\n                                title: 'Grow',\r\n                                type: this.resize.bind(this, {x: 20})\r\n                            },\r\n                            {\r\n                                title: 'Shrink',\r\n                                type: this.resize.bind(this, {x: -20})\r\n                            }\r\n                        ]\r\n                    },\r\n                    {\r\n                        title: 'Y',\r\n                        children: [\r\n                            {\r\n                                title: 'Grow',\r\n                                type: this.resize.bind(this, {y: 20})\r\n                            },\r\n                            {\r\n                                title: 'Shrink',\r\n                                type: this.resize.bind(this, {x: -20})\r\n                            }\r\n                        ]\r\n                    }\r\n                ],\r\n                disabled: true\r\n            },\r\n            {\r\n                title: 'Hide',\r\n                type: this.hide.bind(this)\r\n            }\r\n        ];\r\n        this.tooltipContent = '';\r\n        this.name = '';\r\n        Object.assign(this, params);\r\n        this.tooltipTimeout = 0;\r\n        this.firstRender = true;\r\n    }\r\n\r\n    static get nextId() {\r\n        return (_id++).toString();\r\n    }\r\n\r\n    onContextMenu(pos) {\r\n        _context_menu__WEBPACK_IMPORTED_MODULE_1__.ContextMenu.instance.show({...this, ...pos});\r\n    }\r\n\r\n    onBlur() {\r\n    }\r\n\r\n    onMouseUp() {}\r\n\r\n    onMouseDown() {}\r\n\r\n    onMouseOver(pos) {\r\n        _hover__WEBPACK_IMPORTED_MODULE_3__.Hover.instance.show(this);\r\n        clearTimeout(this.tooltipTimeout);\r\n        this.tooltipTimeout = setTimeout(this.initTooltip.bind(this), 500, {...this, ...pos});\r\n    }\r\n\r\n    onMouseOut() {\r\n        _app__WEBPACK_IMPORTED_MODULE_0__.App.instance.dispatch(new CustomEvent('hideHover'));\r\n        clearTimeout(this.tooltipTimeout);\r\n        _tooltip__WEBPACK_IMPORTED_MODULE_2__.Tooltip.instance.hide();\r\n        _hover__WEBPACK_IMPORTED_MODULE_3__.Hover.instance.hide();\r\n    }\r\n\r\n    render(config = this) {\r\n        if (this.firstRender) return this.firstRender = false;\r\n        _app__WEBPACK_IMPORTED_MODULE_0__.App.instance.repaintAffected(config);\r\n    }\r\n\r\n    translate({x = 0, y = 0}) {\r\n        this.hide();\r\n        Object.assign(this, {\r\n            x: this.x + x,\r\n            y: this.y + y\r\n        });\r\n        this.show();\r\n    }\r\n\r\n    resize({width = 0, height = 0}) {\r\n        this.render({...this, ...{visible: false}});\r\n        Object.assign(this, {\r\n            width: this.width + width,\r\n            height: this.height + height\r\n        });\r\n        this.render();\r\n    }\r\n\r\n    hide() {\r\n        this.visible = false;\r\n        this.render();\r\n    }\r\n\r\n    show() {\r\n        this.visible = true;\r\n        this.render();\r\n    }\r\n\r\n    initTooltip(config) {\r\n        _tooltip__WEBPACK_IMPORTED_MODULE_2__.Tooltip.instance.show(config);\r\n    }\r\n}\r\n\n\n//# sourceURL=webpack://canvas/./components/component.js?");

/***/ }),

/***/ "./components/context-menu.js":
/*!************************************!*\
  !*** ./components/context-menu.js ***!
  \************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"ContextMenu\": () => /* binding */ ContextMenu\n/* harmony export */ });\n/* harmony import */ var _component__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./component */ \"./components/component.js\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils */ \"./utils.js\");\n/* harmony import */ var _app__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../app */ \"./app.js\");\n\r\n\r\n\r\n\r\nlet _instance;\r\n\r\nclass ContextMenu {\r\n    constructor({id}) {\r\n        this.id = id;\r\n        this.ctxMenuItems = [];\r\n        this.initialWidth = this.initialHeight = 0;\r\n        this.throttle = (0,_utils__WEBPACK_IMPORTED_MODULE_1__.throttle)(50);\r\n    }\r\n\r\n    /** @returns {ContextMenu} */\r\n    static get instance() {\r\n        return _instance || (i => _instance = i)(new ContextMenu({id: _component__WEBPACK_IMPORTED_MODULE_0__.Component.nextId}));\r\n    }\r\n\r\n    /**\r\n     * @param {Object} config\r\n     * @param {CanvasRenderingContext2D} ctx\r\n     * @returns Object[]\r\n     */\r\n    static render({x, y, width: fullWidth, height: fullHeight, initialWidth: width, initialHeight: height, ctxMenuItems}, ctx) {\r\n        ctx.fillRect(x, y, fullWidth, fullHeight);\r\n        if (!ctxMenuItems.length) return [];\r\n\r\n        ctx.save();\r\n            ctx.font = '12px Webdings';\r\n            const {width: arrowWidth, actualBoundingBoxAscent: arrowHeight} = ctx.measureText('4');\r\n            const {collection} = ctxMenuItems.reduce(function recurse({x, y, width, visible, collection}, {type, title, highlighted, disabled = false, children = []}, idx) {\r\n                ctx.font = '12px sans-serif';\r\n                const {width: fontWidth, actualBoundingBoxAscent: fontHeight} = ctx.measureText(title);\r\n                const area = {x, y: y + (fontHeight + 10) * idx, width, height: fontHeight + 10};\r\n                const returnValue = {x, y, width, visible,\r\n                    collection: [\r\n                        ...collection,\r\n                        ...[{\r\n                            ...area,\r\n                            ...{\r\n                                type, title, highlighted, disabled,\r\n                                children: children.reduce(recurse, {\r\n                                    x: area.x + area.width,\r\n                                    y: area.y,\r\n                                    width: children.reduce(ContextMenu.calculateMaxWidth, {ctx, maxWidth: 0}).maxWidth,\r\n                                    visible: highlighted,\r\n                                    collection: []\r\n                                }).collection\r\n                            }\r\n                        }]\r\n                    ]\r\n                };\r\n                if (!visible) return returnValue;\r\n                ctx.fillStyle = highlighted ? '#91b5c8' : '#d0d0d0';\r\n                ctx.fillRect.apply(ctx, Object.values(area));\r\n                ctx.fillStyle = disabled ? '#9d9d9d' : '#181818';\r\n                ctx.font = '12px sans-serif';\r\n                ctx.fillText(title, area.x + 10, area.y + area.height - 5);\r\n                if (!children.length) return returnValue;\r\n\r\n                ctx.font = '12px Webdings';\r\n                ctx.fillText('4', area.x + area.width - arrowWidth - 2, area.y + area.height / 2 + arrowHeight / 2);\r\n                return returnValue;\r\n            }, {x, y, width, visible: true, collection: []});\r\n        ctx.restore();\r\n        return collection;\r\n    }\r\n\r\n    static findItemUnderPointer({x, y, right = 0, bottom = 0, highlighted}, item) {\r\n        let hasHighlightedChild;\r\n        if (item.highlighted) {\r\n            ({highlighted: hasHighlightedChild, right, bottom} = item.children.reduce(ContextMenu.findItemUnderPointer, {x, y, right, bottom}));\r\n        }\r\n        item.highlighted = !item.disabled && (\r\n            hasHighlightedChild || (\r\n                item.x <= x &&\r\n                item.y <= y &&\r\n                (item.x + item.width) > x &&\r\n                (item.y + item.height) > y\r\n            )\r\n        );\r\n        return {\r\n            x, y,\r\n            right: Math.max(right, item.x + item.width),\r\n            bottom: Math.max(bottom, item.y + item.height),\r\n            highlighted: item.highlighted || highlighted\r\n        };\r\n    }\r\n\r\n    static calculateMaxWidth({ctx, maxWidth}, {title}) {\r\n        return {ctx, maxWidth: Math.floor(Math.max(maxWidth, ctx.measureText(title).width + 30))};\r\n    }\r\n\r\n    onMouseUp() {}\r\n\r\n    onMouseOver() {\r\n        _app__WEBPACK_IMPORTED_MODULE_2__.App.instance.listen('mousemove', this);\r\n    }\r\n\r\n    onMouseOut() {\r\n        _app__WEBPACK_IMPORTED_MODULE_2__.App.instance.unlisten('mousemove', this);\r\n    }\r\n\r\n    onMouseDown({x: clickX, y: clickY}) {\r\n        const {found} = this.ctxMenuItems.reduce(function recurse({zIndex: highestZIndex, found}, item) {\r\n            const {x, y, width, height, zIndex = 1, highlighted, children = []} = item;\r\n            return (\r\n                zIndex > highestZIndex &&\r\n                highlighted &&\r\n                x < clickX &&\r\n                y < clickY &&\r\n                (x + width) > clickX &&\r\n                (y + height) > clickY && {zIndex, found: item}\r\n            ) || children.reduce(recurse, {zIndex: highestZIndex, found});\r\n        }, {zIndex: -1, found: null});\r\n        found && found.type && found.type();\r\n        this.hide();\r\n    }\r\n\r\n    onBlur() {\r\n        this.hide();\r\n    }\r\n\r\n    show({x, y, ctxMenuConfig: ctxMenuItems}) {\r\n        this.x = x;\r\n        this.y = y;\r\n        this.zIndex = Infinity;\r\n        this.ctxMenuItems = ctxMenuItems;\r\n        ({maxWidth: this.initialWidth, maxWidth: this.width} = ctxMenuItems.reduce(ContextMenu.calculateMaxWidth, {ctx: _app__WEBPACK_IMPORTED_MODULE_2__.App.instance.ctx, maxWidth: 0}));\r\n        this.render();\r\n        this.height = this.initialHeight = this.ctxMenuItems.reduce((totalHeight, {height}) => totalHeight += height, 0);\r\n        _app__WEBPACK_IMPORTED_MODULE_2__.App.instance.assignLastActivated(this);\r\n    }\r\n\r\n    hide() {\r\n        Object.assign(this, {zIndex: -1, ctxMenuItems: []});\r\n        this.render();\r\n        _app__WEBPACK_IMPORTED_MODULE_2__.App.instance.repaintAffected(this);\r\n        Object.assign(this, {x: -Infinity, y: -Infinity, width: 0, height: 0});\r\n        _app__WEBPACK_IMPORTED_MODULE_2__.App.instance.unlisten('mousemove', this);\r\n    }\r\n\r\n    render() {\r\n        this.ctxMenuItems = ContextMenu.render(this, _app__WEBPACK_IMPORTED_MODULE_2__.App.instance.ctx);\r\n    }\r\n\r\n    highlightItems({x, y}) {\r\n        const {width, height} = this;\r\n        const {right, bottom} = this.ctxMenuItems.reduce(ContextMenu.findItemUnderPointer, {x, y, right: 0, bottom: 0});\r\n        this.render();\r\n        this.width = right - this.x;\r\n        this.height = bottom - this.y;\r\n        _app__WEBPACK_IMPORTED_MODULE_2__.App.instance.repaintAffected({...this, ...{width, height, zIndex: -1}});\r\n    }\r\n\r\n    handleEvent({offsetX: x, offsetY: y}) {\r\n        this.throttle(this.highlightItems.bind(this), {x, y});\r\n    }\r\n}\r\n\n\n//# sourceURL=webpack://canvas/./components/context-menu.js?");

/***/ }),

/***/ "./components/date-picker.js":
/*!***********************************!*\
  !*** ./components/date-picker.js ***!
  \***********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"DatePicker\": () => /* binding */ DatePicker\n/* harmony export */ });\n/* harmony import */ var _component__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./component */ \"./components/component.js\");\n/* harmony import */ var _app__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../app */ \"./app.js\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils */ \"./utils.js\");\n\r\n\r\n\r\n\r\nlet _instance;\r\n\r\nclass DatePicker {\r\n    constructor({id}) {\r\n        this.id = id;\r\n        this.opened = false;\r\n        this.currentDate = new Date();\r\n        this.calendarData = null;\r\n        this.observableAreas = {dates: [], rest: []};\r\n        this.initiator = null;\r\n        Object.assign(this, DatePicker.geometric);\r\n        this.throttle = (0,_utils__WEBPACK_IMPORTED_MODULE_2__.throttle)();\r\n        this._init();\r\n    }\r\n\r\n    /** @returns {DatePicker} */\r\n    static get instance() {\r\n        return _instance || (i => _instance = i)(new DatePicker({id: _component__WEBPACK_IMPORTED_MODULE_0__.Component.nextId}));\r\n    }\r\n\r\n    static get geometric() {\r\n        return {\r\n            width: 300,\r\n            height: 200\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @param {Object} o\r\n     * @param {CanvasRenderingContext2D} ctx\r\n     * @returns {{year: string, month: string, observableAreas?: Object[], dates: Object[]}}\r\n     */\r\n    static render({x, y, width, height, opened, calendarData: {year, month, dates = []}, currentDate}, ctx) {\r\n        ctx.fillRect(x, y, width, height);\r\n        if (!opened) return {year, month, dates};\r\n        ctx.save();\r\n            ctx.setTransform(1, 0, 0, 1, x, y);\r\n            ctx.fillStyle = 'white';\r\n            ctx.fillRect(0, 0, width, height);\r\n            ctx.fillStyle = '#006d99';\r\n            ctx.font = 'bold 16px sans-serif';\r\n            ctx.save();\r\n                const {width: monthWidth, actualBoundingBoxAscent: monthHeight} = ctx.measureText(month);\r\n                ctx.font = '20px Webdings';\r\n                const {width: arrowWidth, actualBoundingBoxAscent: arrowHeight} = ctx.measureText('3');\r\n                ctx.translate(Math.round(width / 2 - monthWidth - arrowWidth * 2 - 20), 0);\r\n                const {e: leftArrowXPos} = ctx.getTransform();\r\n                ctx.fillText('3', 0, arrowHeight + 8);\r\n                ctx.translate(arrowWidth + 10, 0);\r\n                ctx.font = 'bold 16px sans-serif';\r\n                ctx.fillText(month, 0, monthHeight + 8);\r\n                ctx.translate(monthWidth + 10, 0);\r\n                const {e: rightArrowXPos} = ctx.getTransform();\r\n                ctx.font = '20px Webdings';\r\n                ctx.fillText('4', 0, arrowHeight + 8);\r\n                let observableAreas = [{\r\n                    x: leftArrowXPos,\r\n                    y: y,\r\n                    width: arrowWidth,\r\n                    height: 30,\r\n                    zIndex: 2,\r\n                    type: 'decreaseCurrentMonth',\r\n                    cursorType: 'pointer'\r\n                }, {\r\n                    x: rightArrowXPos,\r\n                    y: y,\r\n                    width: arrowWidth,\r\n                    height: 30,\r\n                    zIndex: 2,\r\n                    type: 'increaseCurrentMonth',\r\n                    cursorType: 'pointer'\r\n                }];\r\n            ctx.restore();\r\n            let {width: fontWidth, actualBoundingBoxAscent: fontHeight} = ctx.measureText(year);\r\n            ctx.translate(Math.round(width / 2 + 10), 0);\r\n            ctx.fillText(year, 0, fontHeight + 8);\r\n            ctx.translate(fontWidth + 5, 0);\r\n            const {e: yearSpinnerXPos} = ctx.getTransform();\r\n            ctx.font = '14px Webdings';\r\n            ({width: fontWidth, actualBoundingBoxAscent: fontHeight} = ctx.measureText('6'));\r\n            ctx.fillText('5', 0, 15 - 3);\r\n            ctx.fillText('6', 0, 15 + fontHeight + 3);\r\n            observableAreas = [\r\n                ...observableAreas,\r\n                ...[{\r\n                    x: yearSpinnerXPos,\r\n                    y: y,\r\n                    width: fontWidth,\r\n                    height: 15,\r\n                    zIndex: 2,\r\n                    type: 'increaseCurrentYear',\r\n                    cursorType: 'pointer'\r\n                }, {\r\n                    x: yearSpinnerXPos,\r\n                    y: y + 15,\r\n                    width: fontWidth,\r\n                    height: 15,\r\n                    zIndex: 2,\r\n                    type: 'decreaseCurrentYear',\r\n                    cursorType: 'pointer'\r\n                }]\r\n            ];\r\n            const returnValue = {\r\n                year,\r\n                month,\r\n                observableAreas,\r\n                dates: DatePicker.renderCalendarData({\r\n                    x: x + 4,\r\n                    y: y + 30 + 4,\r\n                    width: width - 8,\r\n                    height: height - 30 - 8,\r\n                    data: dates,\r\n                    currentDate\r\n                }, ctx)\r\n            };\r\n        ctx.restore();\r\n        return returnValue;\r\n    }\r\n\r\n    /**\r\n     * @param {Object} o\r\n     * @param {CanvasRenderingContext2D} ctx\r\n     * @returns Object[]\r\n     */\r\n    static renderCalendarData({x, y, width, height, data, currentDate}, ctx) {\r\n        ctx.save();\r\n            ctx.setTransform(1, 0, 0, 1, x, y);\r\n            ctx.font = '18px sans-serif';\r\n            let xPos = 0, roundedXPos = 0, yPos = 0, roundedYPos = 0, contentWidth;\r\n            const interval = {\r\n                horizontal: width / 7,\r\n                vertical: height / Math.ceil(data.length / 7)\r\n            };\r\n            const fontYPos = Math.round(interval.vertical / 2 + ctx.measureText('0').actualBoundingBoxAscent / 2) - 2;\r\n            const currentDateDate = currentDate.getDate();\r\n            const dataArea = data.reduce((collection, item, i) => {\r\n                if (!item) return [...collection, ...[item]];\r\n                const {date, highlighted} = item;\r\n                const isCurrentSelectedDate = currentDateDate === date;\r\n                xPos = i % 7 * interval.horizontal;\r\n                roundedXPos = Math.round(xPos);\r\n                yPos = xPos ? yPos : (i ? yPos + interval.vertical : yPos);\r\n                roundedYPos = Math.round(yPos);\r\n                ctx.save();\r\n                    ctx.fillStyle = isCurrentSelectedDate ? 'red' : '#003b6e';\r\n                    if (highlighted) {\r\n                        ctx.shadowOffsetX = 2;\r\n                        ctx.shadowOffsetY = 2;\r\n                        ctx.shadowBlur = 1;\r\n                        ctx.shadowColor = 'rgba(0, 0, 0, 0.7)';\r\n                    }\r\n                    ctx.fillRect(roundedXPos, roundedYPos, Math.round(interval.horizontal) - 4, Math.round(interval.vertical) - 4);\r\n                ctx.restore();\r\n                ctx.fillStyle = 'white';\r\n                ({width: contentWidth} = ctx.measureText(date));\r\n                ctx.fillText(date, roundedXPos + Math.round((interval.horizontal - 4) / 2 - contentWidth / 2), roundedYPos + fontYPos);\r\n                return [\r\n                    ...collection,\r\n                    ...[{\r\n                        date,\r\n                        highlighted,\r\n                        x: x + roundedXPos,\r\n                        y: y + roundedYPos,\r\n                        width: Math.round(interval.horizontal) - 4,\r\n                        height: Math.round(interval.vertical) - 4,\r\n                        zIndex: 2,\r\n                        type: 'pickDate',\r\n                        cursorType: 'pointer'\r\n                    }]\r\n                ];\r\n            }, []);\r\n        ctx.restore();\r\n        return dataArea;\r\n    }\r\n\r\n    /** @this {DatePicker.prototype} */\r\n    static findItemUnderPointer({x: pointerX, y: pointerY, cursorType: latestKnownCursorType, zIndex: highestZIndex}, area) {\r\n        if (!area) return {x: pointerX, y: pointerY, cursorType: latestKnownCursorType, zIndex: highestZIndex};\r\n        const {x, y, width, height, zIndex} = area;\r\n        const match = zIndex > highestZIndex &&\r\n            x < pointerX &&\r\n            y < pointerY &&\r\n            (x + width) > pointerX &&\r\n            (y + height) > pointerY;\r\n        area.highlighted = match;\r\n        return {...{x: pointerX, y: pointerY}, ...((match && area) || {cursorType: latestKnownCursorType, zIndex: highestZIndex})};\r\n    }\r\n\r\n    static calendarBuilder(date) {\r\n        date = new Date(date);\r\n        date.setDate(1);\r\n        const day = 1000 * 60 * 60 * 24;\r\n        let idx = (date.getDay() + 6) % 7;\r\n        const result = {\r\n            year: date.getFullYear(),\r\n            month: new Intl.DateTimeFormat('ru', {month: 'long'})\r\n                .format(date)\r\n                .replace(/^[а-я]/, match => match.toUpperCase())\r\n        };\r\n        const data = [];\r\n        do {\r\n            data[idx++] = {\r\n                date: date.getDate(),\r\n                highlighted: false\r\n            };\r\n            date = new Date(+date + day);\r\n        } while (date.getDate() > 1);\r\n        return {...result, ...{dates: [...data]}};\r\n    }\r\n\r\n    _init() {\r\n        this.calendarData = DatePicker.calendarBuilder(this.currentDate);\r\n    }\r\n\r\n    onMouseOver() {\r\n        _app__WEBPACK_IMPORTED_MODULE_1__.App.instance.listen('mousemove', this);\r\n    }\r\n\r\n    onMouseOut() {\r\n        _app__WEBPACK_IMPORTED_MODULE_1__.App.instance.canvas.style.cursor = 'initial';\r\n        _app__WEBPACK_IMPORTED_MODULE_1__.App.instance.unlisten('mousemove', this);\r\n    }\r\n\r\n    onBlur() {\r\n        this.hide();\r\n    }\r\n\r\n    onMouseUp() {}\r\n\r\n    onMouseDown({x: clickX, y: clickY}) {\r\n        const _find = area => (\r\n            area && area.x < clickX && area.y < clickY && (area.x + area.width) > clickX && (area.y + area.height) > clickY\r\n        );\r\n        const area = this.calendarData.observableAreas.find(_find) || this.calendarData.dates.find(_find) || {type: ''};\r\n        switch (area.type) {\r\n            case 'pickDate':\r\n                this.currentDate.setDate(area.date);\r\n                break;\r\n            case 'increaseCurrentMonth':\r\n                this.currentDate.setMonth(this.currentDate.getMonth() + 1);\r\n                break;\r\n            case 'decreaseCurrentMonth':\r\n                this.currentDate.setMonth(this.currentDate.getMonth() - 1);\r\n                break;\r\n            case 'increaseCurrentYear':\r\n                this.currentDate.setFullYear(this.currentDate.getFullYear() + 1);\r\n                break;\r\n            case 'decreaseCurrentYear':\r\n                this.currentDate.setFullYear(this.currentDate.getFullYear() - 1);\r\n                break;\r\n            default:\r\n                return;\r\n        }\r\n        this.calendarData = DatePicker.calendarBuilder(this.currentDate);\r\n        this.render();\r\n        this.initiator.setDate(this.currentDate);\r\n    }\r\n\r\n    show({x = this.x, y = this.y, initiator}) {\r\n        Object.assign(this, {x, y, zIndex: Infinity, initiator, opened: true});\r\n        this.currentDate = initiator.date || new Date();\r\n        this.calendarData = DatePicker.calendarBuilder(this.currentDate);\r\n        this.render();\r\n        _app__WEBPACK_IMPORTED_MODULE_1__.App.instance.assignLastActivated(this);\r\n    }\r\n\r\n    hide() {\r\n        Object.assign(this, {opened: false, zIndex: -1});\r\n        this.render();\r\n        _app__WEBPACK_IMPORTED_MODULE_1__.App.instance.repaintAffected(this);\r\n        Object.assign(this, {x: -Infinity, y: -Infinity, initiator: null});\r\n        _app__WEBPACK_IMPORTED_MODULE_1__.App.instance.unlisten('mousemove', this);\r\n    }\r\n\r\n    render() {\r\n        this.calendarData = DatePicker.render(this, _app__WEBPACK_IMPORTED_MODULE_1__.App.instance.ctx);\r\n    }\r\n\r\n    highlightAreas(pos) {\r\n        ({cursorType: _app__WEBPACK_IMPORTED_MODULE_1__.App.instance.canvas.style.cursor} = [\r\n            ...this.calendarData.dates,\r\n            ...this.calendarData.observableAreas\r\n        ].reduce(DatePicker.findItemUnderPointer, {...pos, ...{cursorType: 'initial', zIndex: -1}}));\r\n        this.render();\r\n    }\r\n\r\n    handleEvent({offsetX: x, offsetY: y}) {\r\n        this.throttle(this.highlightAreas.bind(this), {x, y});\r\n    }\r\n}\r\n\n\n//# sourceURL=webpack://canvas/./components/date-picker.js?");

/***/ }),

/***/ "./components/edit-box.js":
/*!********************************!*\
  !*** ./components/edit-box.js ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"EditBox\": () => /* binding */ EditBox\n/* harmony export */ });\n/* harmony import */ var _component__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./component */ \"./components/component.js\");\n/* harmony import */ var _app__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../app */ \"./app.js\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils */ \"./utils.js\");\n/* harmony import */ var _date_picker__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./date-picker */ \"./components/date-picker.js\");\n\r\n\r\n\r\n\r\n\r\nclass EditBox extends _component__WEBPACK_IMPORTED_MODULE_0__.Component {\r\n    constructor({width = EditBox.geometric.width, isCalendar = false, date = isCalendar ? new Date() : null, value = isCalendar ? (0,_utils__WEBPACK_IMPORTED_MODULE_2__.dateFormat)(date) : '', ...params}) {\r\n        super(params);\r\n        this.name = 'EditBox';\r\n        this.focused = false;\r\n        this.blinkTimeout = 0;\r\n        this.caret = false;\r\n        this.value = value;\r\n        this.date = date;\r\n        this.isCalendar = isCalendar;\r\n        Object.assign(this, EditBox.geometric, {width});\r\n        this.observableAreas = [\r\n            ...(\r\n                isCalendar ? [\r\n                    {\r\n                        x: this.x,\r\n                        y: this.y,\r\n                        width: this.width - this.height,\r\n                        height: this.height,\r\n                        type: 'focus',\r\n                        cursorType: 'text'\r\n                    },\r\n                    {\r\n                        x: this.x + this.width - this.height,\r\n                        y: this.y,\r\n                        width: this.height,\r\n                        height: this.height,\r\n                        zIndex: 1,\r\n                        type: 'showCalendar',\r\n                        cursorType: 'pointer'\r\n                    }\r\n                ] : [\r\n                    {\r\n                        x: this.x,\r\n                        y: this.y,\r\n                        width: this.width,\r\n                        height: this.height,\r\n                        type: 'focus',\r\n                        cursorType: 'text'\r\n                    }\r\n                ]\r\n            )\r\n        ];\r\n        this.throttle = (0,_utils__WEBPACK_IMPORTED_MODULE_2__.throttle)();\r\n    }\r\n\r\n    static get geometric() {\r\n        return {\r\n            width: 90,\r\n            height: 20\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @param {Object} config\r\n     * @param {CanvasRenderingContext2D} ctx\r\n     */\r\n    static render({x, y, width, height, caret, focused, value, isCalendar}, ctx) {\r\n        ctx.fillRect(x - 2, y - 2, width + 3, height + 3);\r\n        ctx.save();\r\n            ctx.font = '14px sans-serif';\r\n            const textWidth = Math.floor(ctx.measureText(value).width);\r\n            ctx.strokeStyle = focused ? 'black' : '#666666';\r\n            ctx.strokeRect(x, y, width, height);\r\n            ctx.save();\r\n                ctx.beginPath();\r\n                ctx.rect(x, y, width, height);\r\n                ctx.clip();\r\n                if (caret) {\r\n                    ctx.beginPath();\r\n                    ctx.moveTo(x + 3 + textWidth, y + 2);\r\n                    ctx.lineTo(x + 3 + textWidth, y + height - 2);\r\n                    ctx.stroke();\r\n                }\r\n                if (value) {\r\n                    ctx.fillStyle = '#1d1d1d';\r\n                    ctx.fillText(value, x + 3, y + height - 4);\r\n                }\r\n            ctx.restore();\r\n            if (!isCalendar) return ctx.restore();\r\n\r\n            ctx.font = '20px/0 Webdings';\r\n            const fontHeight = ctx.measureText('¦').actualBoundingBoxAscent;\r\n            ctx.fillStyle = '#666666';\r\n            ctx.fillText('¦', x + width - height, y + fontHeight + 1);\r\n        ctx.restore();\r\n    }\r\n\r\n    /** @this {EditBox.prototype} */\r\n    static defineCursorType({x, y}) {\r\n        ({cursorType: _app__WEBPACK_IMPORTED_MODULE_1__.App.instance.canvas.style.cursor} = (\r\n            this.observableAreas.find(function({x, y, width, height}) {\r\n                return x < this.x && y < this.y && (x + width) > this.x && (y + height) > this.y;\r\n            }, {x, y}) || {cursorType: 'initial'}\r\n        ));\r\n    }\r\n\r\n    onMouseOver() {\r\n        _app__WEBPACK_IMPORTED_MODULE_1__.App.instance.listen('mousemove', this);\r\n    }\r\n\r\n    onMouseOut() {\r\n        _app__WEBPACK_IMPORTED_MODULE_1__.App.instance.canvas.style.cursor = 'initial';\r\n        _app__WEBPACK_IMPORTED_MODULE_1__.App.instance.unlisten('mousemove', this);\r\n    }\r\n\r\n    onBlur() {\r\n        document.removeEventListener('keydown', this);\r\n        clearInterval(this.blinkTimeout);\r\n        this.focused = false;\r\n        this.caret = false;\r\n        this.isCalendar && this.setDate(new Date(Date.parse(this.value)));\r\n        this.render();\r\n    }\r\n\r\n    onMouseDown({x, y}) {\r\n        const area = this.observableAreas.find(function({x, y, width, height}) {\r\n            return x < this.x && y < this.y && (x + width) > this.x && (y + height) > this.y;\r\n        }, {x, y});\r\n        if (!area) return;\r\n        switch (area.type) {\r\n            case 'focus':\r\n                this.focus();\r\n                break;\r\n            case 'showCalendar':\r\n                this.showCalendar({x, y});\r\n                break;\r\n            default:\r\n        }\r\n    }\r\n\r\n    showCalendar({x, y}) {\r\n        _date_picker__WEBPACK_IMPORTED_MODULE_3__.DatePicker.instance.show({initiator: this, x, y});\r\n    }\r\n\r\n    focus() {\r\n        document.addEventListener('keydown', this);\r\n        clearInterval(this.blinkTimeout);\r\n        this.blinkTimeout = setInterval(this.blink.bind(this), 500);\r\n        this.focused = true;\r\n        this.caret = true;\r\n        this.render();\r\n    }\r\n\r\n    blink() {\r\n        this.caret = !this.caret;\r\n        this.render();\r\n    }\r\n\r\n    setDate(date = this.date) {\r\n        if (!date) return;\r\n        this.date = date;\r\n        this.value = (0,_utils__WEBPACK_IMPORTED_MODULE_2__.dateFormat)(date);\r\n        this.render();\r\n    }\r\n\r\n    render() {\r\n        EditBox.render(this, _app__WEBPACK_IMPORTED_MODULE_1__.App.instance.ctx);\r\n        super.render();\r\n    }\r\n\r\n    handleEvent(e) {\r\n        e.preventDefault();\r\n        const {type, key, offsetX: x, offsetY: y} = e;\r\n        switch (type) {\r\n            case 'keydown':\r\n                switch (key) {\r\n                    case 'Backspace':\r\n                        this.value = this.value.substr(0, this.value.length - 1);\r\n                        break;\r\n                    case 'Enter':\r\n                        this.onBlur();\r\n                        break;\r\n                    case 'Alt':\r\n                    case 'Control':\r\n                    case 'Shift':\r\n                    case 'ArrowRight':\r\n                    case 'ArrowLeft':\r\n                    case 'ArrowUp':\r\n                    case 'ArrowDown':\r\n                        break;\r\n                    default:\r\n                        this.value += key;\r\n                }\r\n                break;\r\n            case 'mousemove':\r\n                return this.throttle(EditBox.defineCursorType.bind(this), {x, y});\r\n            default:\r\n        }\r\n        this.render();\r\n    }\r\n}\r\n\n\n//# sourceURL=webpack://canvas/./components/edit-box.js?");

/***/ }),

/***/ "./components/hover.js":
/*!*****************************!*\
  !*** ./components/hover.js ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Hover\": () => /* binding */ Hover\n/* harmony export */ });\n/* harmony import */ var _component__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./component */ \"./components/component.js\");\n/* harmony import */ var _app__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../app */ \"./app.js\");\n\r\n\r\n\r\nlet _instance;\r\n\r\nclass Hover {\r\n    constructor({id}) {\r\n        this.id = id;\r\n        this.active = false;\r\n    }\r\n\r\n    /** @returns {Hover} */\r\n    static get instance() {\r\n        return _instance || (i => _instance = i)(new Hover({id: _component__WEBPACK_IMPORTED_MODULE_0__.Component.nextId}));\r\n    }\r\n\r\n    /**\r\n     * @param {Object} config\r\n     * @param {CanvasRenderingContext2D} ctx\r\n     */\r\n    static render({x, y, width, height, active}, ctx) {\r\n        ctx.fillRect(x - 2, y - 2, width + 4, height + 4);\r\n        if (!active) return;\r\n        ctx.save();\r\n            ctx.strokeStyle = '#fd2929';\r\n            ctx.strokeRect(x, y, width, height);\r\n        ctx.restore();\r\n    }\r\n\r\n    onMouseOver() {}\r\n\r\n    onMouseOut() {}\r\n\r\n    show({x, y, width, height, zIndex = 1}) {\r\n        Object.assign(this, {\r\n            x: x - 1,\r\n            y: y - 1,\r\n            width: width + 2,\r\n            height: height + 2,\r\n            zIndex: zIndex - 1,\r\n            active: true\r\n        });\r\n        this.render();\r\n    }\r\n\r\n    hide() {\r\n        this.zIndex = -1;\r\n        this.active = false;\r\n        this.render();\r\n        Object.assign(this, {\r\n            x: -Infinity,\r\n            y: -Infinity,\r\n            width: 0,\r\n            height: 0\r\n        });\r\n    }\r\n\r\n    render() {\r\n        Hover.render(this, _app__WEBPACK_IMPORTED_MODULE_1__.App.instance.ctx);\r\n        _app__WEBPACK_IMPORTED_MODULE_1__.App.instance.repaintAffected(this);\r\n    }\r\n}\r\n\n\n//# sourceURL=webpack://canvas/./components/hover.js?");

/***/ }),

/***/ "./components/tooltip.js":
/*!*******************************!*\
  !*** ./components/tooltip.js ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Tooltip\": () => /* binding */ Tooltip\n/* harmony export */ });\n/* harmony import */ var _component__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./component */ \"./components/component.js\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils */ \"./utils.js\");\n/* harmony import */ var _app__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../app */ \"./app.js\");\n\r\n\r\n\r\n\r\nlet _instance;\r\n\r\nclass Tooltip {\r\n    constructor({id}) {\r\n        this.id = id;\r\n        this.text = '';\r\n        this.debounce = (0,_utils__WEBPACK_IMPORTED_MODULE_1__.debounce)();\r\n    }\r\n\r\n    /** @returns {Tooltip} */\r\n    static get instance() {\r\n        return _instance || (i => _instance = i)(new Tooltip({id: _component__WEBPACK_IMPORTED_MODULE_0__.Component.nextId}));\r\n    }\r\n\r\n    /**\r\n     * @param {Object} config\r\n     * @param {CanvasRenderingContext2D} ctx\r\n     */\r\n    static render({x, y, width, height, text}, ctx) {\r\n        ctx.fillRect(x, y, width, height);\r\n        if (!text) return;\r\n        ctx.save();\r\n            ctx.beginPath();\r\n            ctx.rect(x, y, 500, height);\r\n            ctx.clip();\r\n            ctx.font = '10px sans-serif';\r\n            ctx.fillStyle = '#ffea9f';\r\n            ctx.fillRect(x, y, width, height);\r\n            ctx.fillStyle = '#323232';\r\n            ctx.fillText(text, x + 10, y + height - 10);\r\n        ctx.restore();\r\n    }\r\n\r\n    onContextMenu() {}\r\n\r\n    onBlur() {}\r\n\r\n    onMouseOver() {}\r\n\r\n    onMouseOut() {}\r\n\r\n    onMouseDown() {}\r\n\r\n    onMouseUp() {}\r\n\r\n    show({x, y, tooltipContent}) {\r\n        const ctx = _app__WEBPACK_IMPORTED_MODULE_2__.App.instance.ctx;\r\n        ctx.save();\r\n            ctx.font = '10px sans-serif';\r\n            const {actualBoundingBoxAscent: contentHeight, width: contentWidth} = ctx.measureText(tooltipContent);\r\n        ctx.restore();\r\n        Object.assign(this, {\r\n            x,\r\n            y: y > contentHeight + 20 ? y - contentHeight - 20 : y,\r\n            width: contentWidth + 20,\r\n            height: contentHeight + 20,\r\n            text: tooltipContent,\r\n            zIndex: Number.MAX_SAFE_INTEGER\r\n        });\r\n        this.render();\r\n        _app__WEBPACK_IMPORTED_MODULE_2__.App.instance.listen('mousemove', this);\r\n    }\r\n\r\n    hide() {\r\n        this.zIndex = -1;\r\n        this.text = '';\r\n        this.render();\r\n        Object.assign(this, {\r\n            x: -Infinity,\r\n            y: -Infinity,\r\n            width: 0,\r\n            height: 0\r\n        });\r\n        _app__WEBPACK_IMPORTED_MODULE_2__.App.instance.unlisten('mousemove', this);\r\n    }\r\n\r\n    translate({x, y}) {\r\n        const {text, zIndex} = this;\r\n        Object.assign(this, {text: '', zIndex: -1});\r\n        this.render();\r\n        Object.assign(this, {...{x, y: y - this.height, text, zIndex}});\r\n        this.render();\r\n    }\r\n\r\n    render() {\r\n        Tooltip.render(this, _app__WEBPACK_IMPORTED_MODULE_2__.App.instance.ctx);\r\n        _app__WEBPACK_IMPORTED_MODULE_2__.App.instance.repaintAffected(this);\r\n    }\r\n\r\n    handleEvent({offsetX: x, offsetY: y}) {\r\n        this.debounce(this.translate.bind(this), {x, y});\r\n    }\r\n}\r\n\n\n//# sourceURL=webpack://canvas/./components/tooltip.js?");

/***/ }),

/***/ "./components/trender.js":
/*!*******************************!*\
  !*** ./components/trender.js ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Trender\": () => /* binding */ Trender\n/* harmony export */ });\n/* harmony import */ var _component__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./component */ \"./components/component.js\");\n/* harmony import */ var _app__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../app */ \"./app.js\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils */ \"./utils.js\");\n\r\n\r\n\r\n\r\n\r\nclass Trender extends _component__WEBPACK_IMPORTED_MODULE_0__.Component {\r\n    constructor(params) {\r\n        super(params);\r\n        this.name = 'Trender';\r\n        this.scale = 1;\r\n        this.ctxMenuConfig = [\r\n            {\r\n                title: 'Zoom In',\r\n                callback: function() {\r\n                    this.scale *= 1.1;\r\n                    this.render();\r\n                }\r\n            },\r\n            {\r\n                title: 'Zoom Out',\r\n                callback: function() {\r\n                    this.scale *= 0.9;\r\n                    this.render();\r\n                }\r\n            },\r\n            {\r\n                title: 'Zoom Reset',\r\n                callback: function() {\r\n                    this.scale = 1;\r\n                    this.render();\r\n                }\r\n            }\r\n        ].map(({callback, ...rest}) => ({\r\n            ...rest,\r\n            ...{\r\n                callback: callback.bind(this)\r\n            }\r\n        }));\r\n        this.debounce = (0,_utils__WEBPACK_IMPORTED_MODULE_2__.debounce)();\r\n        this._init();\r\n    }\r\n\r\n    /**\r\n     * @param {Object} config\r\n     * @param {CanvasRenderingContext2D} ctx\r\n     */\r\n    static render(config, ctx) {\r\n        const chartMargin = 20;\r\n        const {x, y, width, height, padding, data: {points}} = config;\r\n        const chartArea = {\r\n            x: x + padding[3],\r\n            y: y + padding[0],\r\n            width: width - padding[1] - padding[3],\r\n            height: height - padding[0] - padding[2]\r\n        };\r\n        const {min, max} = Trender.normalizeRange(points);\r\n        const rangeScale = (chartArea.height - chartMargin) / (max - min);\r\n        const zeroLevel = Math.floor((chartArea.y + chartMargin / 2) + max * rangeScale);\r\n        ctx.save();\r\n        ctx.fillStyle = 'white';\r\n        ctx.fillRect(x, y, width, height);\r\n        ctx.fillStyle = 'rgba(127, 127, 127, 0.2)';\r\n        ctx.fillRect.apply(ctx, Object.values(chartArea));\r\n        ctx.restore();\r\n        Trender.drawXAxis({...config, ...chartArea}, ctx);\r\n        Trender.drawYAxis({...config, ...chartArea, ...{zeroLevel, rangeScale}}, ctx);\r\n        Trender.drawData({...config, ...chartArea, ...{zeroLevel, rangeScale}}, ctx);\r\n        Trender.drawLegend({...config, ...{\r\n            x,\r\n            y: y + height - 40,\r\n            width,\r\n            height: 40\r\n        }}, ctx);\r\n    }\r\n\r\n    /**\r\n     * @param {Object} config\r\n     * @param {CanvasRenderingContext2D} ctx\r\n     */\r\n    static drawData({x, y, width, height, padding, scale, data: {points = []}, zeroLevel, rangeScale}, ctx) {\r\n        ctx.save();\r\n            ctx.strokeStyle = '#0000ff';\r\n            ctx.fillStyle = 'white';\r\n            ctx.setTransform(1, 0, 0, 1, x, zeroLevel);\r\n            ctx.beginPath();\r\n            ctx.moveTo(0, (-points[0]?.value || 0) * scale * rangeScale);\r\n            for (let i = 0,\r\n                     length = points.length,\r\n                     step = width / length,\r\n                     scaledValue = -points[i].value * scale * rangeScale,\r\n                     xPos = 0;\r\n                 i < length;\r\n                 xPos += step, scaledValue = (-points[++i]?.value || 0) * scale * rangeScale) {\r\n                ctx.lineTo(xPos, scaledValue);\r\n            }\r\n            ctx.stroke();\r\n            for (let i = 0,\r\n                     length = points.length,\r\n                     step = width / length,\r\n                     scaledValue = -points[i].value * scale * rangeScale,\r\n                     xPos = 0;\r\n                 i < length;\r\n                 xPos += step, scaledValue = (-points[++i]?.value || 0) * scale * rangeScale) {\r\n                ctx.fillRect(xPos - 4, scaledValue - 4, 8, 8);\r\n                ctx.strokeRect(xPos - 4, scaledValue - 4, 8, 8);\r\n            }\r\n        ctx.restore();\r\n    }\r\n\r\n    /**\r\n     * @param {Object} config\r\n     * @param {CanvasRenderingContext2D} ctx\r\n     */\r\n    static drawXAxis({x, y, width, height, data: {points}}, ctx) {\r\n        ctx.save();\r\n            ctx.strokeStyle = '#3c3c3c';\r\n            ctx.fillStyle = '#3c3c3c';\r\n            ctx.beginPath();\r\n            ctx.moveTo(x, y + height);\r\n            ctx.lineTo(x, y);\r\n            ctx.stroke();\r\n            ctx.strokeStyle = 'rgba(160, 160, 160, 0.5)';\r\n            ctx.font = '10px sans-serif';\r\n            for (let i = 0,\r\n                    xPos = x,\r\n                    interval = width / points.length,\r\n                    roundedXPos = Math.round(xPos),\r\n                    labelWidth = ctx.measureText(points[0].time).width,\r\n                    labelOffset = Math.round(labelWidth / 2),\r\n                    labelsInterval = Math.ceil((labelWidth + 20) / interval),\r\n                    nextLabelPos = xPos + labelsInterval,\r\n                    isMajorTick = false;\r\n                 i < points.length;\r\n                 i++,\r\n                     xPos += interval,\r\n                     roundedXPos = Math.round(xPos),\r\n                     isMajorTick = !(i % labelsInterval)) {\r\n                ctx.strokeStyle = isMajorTick ? '#3c3c3c' : 'rgba(160, 160, 160, 0.5)';\r\n                ctx.beginPath();\r\n                ctx.moveTo(roundedXPos, isMajorTick ? y + height + 5 : y + height);\r\n                ctx.lineTo(roundedXPos, y);\r\n                ctx.stroke();\r\n                if (!isMajorTick) continue;\r\n                ctx.fillText(points[i].time, roundedXPos - labelOffset, y + height + 20);\r\n                nextLabelPos += labelsInterval;\r\n            }\r\n        ctx.restore();\r\n    }\r\n\r\n    /**\r\n     * @param {Object} config\r\n     * @param {CanvasRenderingContext2D} ctx\r\n     */\r\n    static drawYAxis({x, y, width, height, ticks = 20, majorTicksInterval, zeroLevel, scale, rangeScale, data: {points}}, ctx) {\r\n        ctx.save();\r\n        ctx.strokeStyle = 'rgba(160, 160, 160, 0.5)';\r\n        ctx.fillStyle = '#1a1a1a';\r\n        ctx.font = 'bold 14px sans-serif';\r\n        const interval = height / ticks;\r\n        ctx.beginPath();\r\n        ctx.rect(x -100, y, width + 100, height);\r\n        ctx.clip();\r\n        for (let i = 0,\r\n                 yPos = zeroLevel + Math.ceil((y + height - zeroLevel) / interval) * interval,\r\n                 roundedYPos = Math.round(yPos),\r\n                 label = ((zeroLevel - yPos) / rangeScale / scale).toFixed(2),\r\n                isMajorTick = false;\r\n             i < ticks;\r\n             i++,\r\n                yPos -= interval,\r\n                 roundedYPos = Math.round(yPos),\r\n                label = ((zeroLevel - yPos ) / rangeScale / scale).toFixed(2),\r\n                 isMajorTick = Math.abs(yPos - zeroLevel) % (interval * majorTicksInterval) < interval / 2) {\r\n            ctx.strokeStyle = isMajorTick ? '#434343' : 'rgba(160, 160, 160, 0.5)';\r\n            ctx.beginPath();\r\n            ctx.moveTo(isMajorTick ? x - 5 : x, roundedYPos);\r\n            ctx.lineTo(x + width, roundedYPos);\r\n            ctx.stroke();\r\n            if (!isMajorTick) continue;\r\n            ctx.fillText(label, x - ctx.measureText(label).width - 10, roundedYPos);\r\n        }\r\n        ctx.restore();\r\n    }\r\n\r\n    /**\r\n     * @param {Object} config\r\n     * @param {CanvasRenderingContext2D} ctx\r\n     */\r\n    static drawLegend({x, y, width, height, data: {name}}, ctx) {\r\n        ctx.save();\r\n            ctx.strokeStyle = 'rgb(0,0,255)';\r\n            ctx.font = 'bold 12px sans-serif';\r\n            const fontHeight = ctx.measureText(name).actualBoundingBoxAscent;\r\n            ctx.setTransform(-1, 0, 0, 1, x + width / 2 - 5, y + height / 2);\r\n            ctx.beginPath();\r\n            ctx.moveTo(0, 4);\r\n            ctx.lineTo(20, 4);\r\n            ctx.stroke();\r\n            ctx.fillStyle = 'white';\r\n            ctx.fillRect(6, 0, 8, 8);\r\n            ctx.strokeRect(6, 0, 8, 8);\r\n            ctx.setTransform(1, 0, 0, 1, x + width / 2 + 5, y + height / 2);\r\n            ctx.fillStyle = '#151515';\r\n            ctx.fillText(name, 0, fontHeight - 2);\r\n        ctx.restore();\r\n    }\r\n\r\n    static normalizeRange(data) {\r\n        return data.reduce(({min, max, maxNegative, minPositive}, {value}) => (\r\n            {\r\n                min: Math.min(value, min),\r\n                max: Math.max(value, max)\r\n            }\r\n        ), {\r\n            min: Infinity,\r\n            max: -Infinity\r\n        });\r\n    }\r\n\r\n    static mockData() {\r\n        const startTime = Date.now() - 1000 * 29;\r\n        return new Array(30)\r\n            .fill(startTime)\r\n            .map((time, idx) => (\r\n                {\r\n                    time: new Date(time + 1000 * idx).toLocaleTimeString(),\r\n                    value: _utils__WEBPACK_IMPORTED_MODULE_2__.sinusoidGen.next().value,\r\n                }\r\n            ));\r\n    }\r\n\r\n    static mockNextData() {\r\n        _app__WEBPACK_IMPORTED_MODULE_1__.App.instance.dispatch(new CustomEvent('trenderNextTick', {detail: {\r\n            time: new Date().toLocaleTimeString(),\r\n            value: _utils__WEBPACK_IMPORTED_MODULE_2__.sinusoidGen.next().value,\r\n        }}))\r\n    }\r\n\r\n    _init() {\r\n        _app__WEBPACK_IMPORTED_MODULE_1__.App.instance.listen('trenderNextTick', this);\r\n    }\r\n\r\n    onMouseOver() {\r\n    }\r\n\r\n    render() {\r\n        Trender.render(this, _app__WEBPACK_IMPORTED_MODULE_1__.App.instance.ctx);\r\n        super.render();\r\n    }\r\n\r\n    handleEvent({detail}) {\r\n        this.data.points.shift();\r\n        this.data.points.push(detail);\r\n        this.render();\r\n    }\r\n}\r\n\n\n//# sourceURL=webpack://canvas/./components/trender.js?");

/***/ }),

/***/ "./components/value-item.js":
/*!**********************************!*\
  !*** ./components/value-item.js ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"ValueItem\": () => /* binding */ ValueItem\n/* harmony export */ });\n/* harmony import */ var _component__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./component */ \"./components/component.js\");\n/* harmony import */ var _app__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../app */ \"./app.js\");\n\r\n\r\n\r\nclass ValueItem extends _component__WEBPACK_IMPORTED_MODULE_0__.Component {\r\n    constructor({value, ...params}) {\r\n        super(params);\r\n        this.name = 'ValueItem';\r\n        this.value = this.tooltipContent = value;\r\n        this.active = false;\r\n        this.trend = 0;\r\n        Object.assign(this, ValueItem.geometric);\r\n    }\r\n\r\n    static get geometric() {\r\n        return {\r\n            width: 30,\r\n            height: 20\r\n        }\r\n    }\r\n\r\n    static get randomValue() {\r\n        return (Math.random() * 100).toFixed(2);\r\n    }\r\n\r\n    /**\r\n     * @param {Object} config\r\n     * @param {CanvasRenderingContext2D} ctx\r\n     */\r\n    static render({x, y, width, height, visible, value, trend, active}, ctx) {\r\n        let stack = 0;\r\n        ctx.fillRect(x, y, width, height);\r\n        if (!visible) return;\r\n        ctx.save();\r\n\t\t\tctx.fillStyle = '#161616';\r\n\t\t\tctx.font = 'bold 12px serif';\r\n\t\t\tconst fontHeight = ctx.measureText(value).actualBoundingBoxAscent;\r\n\t\t\tif (active) {\r\n\t\t\t\tctx.save();\r\n\t\t\t\tstack++;\r\n\t\t\t\tif (trend > 0) {\r\n\t\t\t\t\tctx.fillStyle = '#00FF00';\r\n\t\t\t\t\tctx.fillRect(x, y, width, height);\r\n\t\t\t\t\tctx.fillStyle = \"black\";\r\n\t\t\t\t} else if (trend < 0) {\r\n\t\t\t\t\tctx.fillStyle = '#e50000';\r\n\t\t\t\t\tctx.fillRect(x, y, width, height);\r\n\t\t\t\t\tctx.fillStyle = \"white\";\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tctx.beginPath();\r\n\t\t\tctx.rect(x, y, width, height);\r\n\t\t\tctx.clip();\r\n\t\t\tctx.fillText(value, x + 1, y + fontHeight + 5);\r\n\t\t\tstack && ctx.restore();\r\n        ctx.restore();\r\n    }\r\n\r\n    initRandomChange() {\r\n        setInterval(this.onValueChange.bind(this), 10000 + Math.random() * 60000);\r\n    }\r\n\r\n    onMouseDown() {\r\n        super.onMouseDown();\r\n        this.active = true;\r\n        this.render();\r\n    }\r\n\r\n    setText(value) {\r\n        this.active = true;\r\n        this.trend = value > this.value ? 1 : (value < this.value ? -1 : 0);\r\n        this.value = this.tooltipContent = value;\r\n        this.render();\r\n        setTimeout(this.blink.bind(this), 200);\r\n    }\r\n\r\n    blink() {\r\n        this.active = false;\r\n        this.render();\r\n    }\r\n\r\n    onValueChange() {\r\n        this.setText(ValueItem.randomValue);\r\n    }\r\n\r\n    render() {\r\n        ValueItem.render(this, _app__WEBPACK_IMPORTED_MODULE_1__.App.instance.ctx);\r\n        super.render();\r\n    }\r\n}\r\n\n\n//# sourceURL=webpack://canvas/./components/value-item.js?");

/***/ }),

/***/ "./index.js":
/*!******************!*\
  !*** ./index.js ***!
  \******************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _components_component__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./components/component */ \"./components/component.js\");\n/* harmony import */ var _components_collection_item__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./components/collection-item */ \"./components/collection-item.js\");\n/* harmony import */ var _components_tooltip__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./components/tooltip */ \"./components/tooltip.js\");\n/* harmony import */ var _components_value_item__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./components/value-item */ \"./components/value-item.js\");\n/* harmony import */ var _components_chart_item__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./components/chart-item */ \"./components/chart-item.js\");\n/* harmony import */ var _components_edit_box__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./components/edit-box */ \"./components/edit-box.js\");\n/* harmony import */ var _components_context_menu__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./components/context-menu */ \"./components/context-menu.js\");\n/* harmony import */ var _app__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./app */ \"./app.js\");\n/* harmony import */ var _components_button__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./components/button */ \"./components/button.js\");\n/* harmony import */ var _components_combo_box__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./components/combo-box */ \"./components/combo-box.js\");\n/* harmony import */ var _components_trender__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./components/trender */ \"./components/trender.js\");\n/* harmony import */ var _components_hover__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./components/hover */ \"./components/hover.js\");\n/* harmony import */ var _components_clock__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./components/clock */ \"./components/clock.js\");\n/* harmony import */ var _components_date_picker__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./components/date-picker */ \"./components/date-picker.js\");\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst chartConfig = {\r\n    type: 'column',\r\n    padding: [20, 20, 70, 70],\r\n    ticks: 5,\r\n    data: {\r\n        points: _components_chart_item__WEBPACK_IMPORTED_MODULE_4__.ChartItem.mockData(),\r\n        margin: 0.1\r\n    }\r\n};\r\n\r\nconst trenderConfig = {\r\n    padding: [20, 20, 70, 70],\r\n    ticks: 20,\r\n    majorTicksInterval: 4,\r\n    data: {\r\n        name: 'sin(x)',\r\n        points: _components_trender__WEBPACK_IMPORTED_MODULE_10__.Trender.mockData()\r\n    }\r\n};\r\n\r\nconst menuItems = [\r\n    {\r\n        title: 'One',\r\n        value: 1,\r\n    },\r\n    {\r\n        title: 'Two',\r\n        value: 2,\r\n    },\r\n    {\r\n        title: 'Three',\r\n        value: 3,\r\n    }\r\n];\r\n\r\nconst buttonCallback = () => (\r\n    _app__WEBPACK_IMPORTED_MODULE_7__.App.instance.dispatch(new CustomEvent('randomizeChartData'))\r\n);\r\n\r\nsetInterval(_components_trender__WEBPACK_IMPORTED_MODULE_10__.Trender.mockNextData, 1000);\r\n\r\n_app__WEBPACK_IMPORTED_MODULE_7__.App.instance.components = [\r\n    ...[\r\n        new _components_clock__WEBPACK_IMPORTED_MODULE_12__.Clock({y: 0, zIndex: 1, id: _components_component__WEBPACK_IMPORTED_MODULE_0__.Component.nextId})\r\n    ],\r\n    ..._components_collection_item__WEBPACK_IMPORTED_MODULE_1__.CollectionItem.compose({x: 0, y: 30, cols: 25, rows: 12, gap: 20, ctor: _components_value_item__WEBPACK_IMPORTED_MODULE_3__.ValueItem}),\r\n    ...[\r\n        new _components_edit_box__WEBPACK_IMPORTED_MODULE_5__.EditBox({x: 0, y: 600, zIndex: 1, id: _components_component__WEBPACK_IMPORTED_MODULE_0__.Component.nextId}),\r\n        new _components_edit_box__WEBPACK_IMPORTED_MODULE_5__.EditBox({x: 100, y: 600, width: 100, zIndex: 1, isCalendar: true, id: _components_component__WEBPACK_IMPORTED_MODULE_0__.Component.nextId}),\r\n        new _components_combo_box__WEBPACK_IMPORTED_MODULE_9__.ComboBox({x: 250, y: 600, zIndex: 1, variableName: 'Combobox1', menuItems, id: _components_component__WEBPACK_IMPORTED_MODULE_0__.Component.nextId}),\r\n        new _components_chart_item__WEBPACK_IMPORTED_MODULE_4__.ChartItem({...{x: _app__WEBPACK_IMPORTED_MODULE_7__.App.instance.canvas.width - 600, y: 30, width: 600, height: 400, zIndex: 1, id: _components_component__WEBPACK_IMPORTED_MODULE_0__.Component.nextId}, ...chartConfig}),\r\n        new _components_button__WEBPACK_IMPORTED_MODULE_8__.Button({x: _app__WEBPACK_IMPORTED_MODULE_7__.App.instance.canvas.width - _components_button__WEBPACK_IMPORTED_MODULE_8__.Button.geometric.width, y: 450, zIndex: 1, value: 'Randomize', callback: buttonCallback, id: _components_component__WEBPACK_IMPORTED_MODULE_0__.Component.nextId}),\r\n        new _components_trender__WEBPACK_IMPORTED_MODULE_10__.Trender({...{x: _app__WEBPACK_IMPORTED_MODULE_7__.App.instance.canvas.width - 600, y: 490, width: 600, height: 400, zIndex: 1, id: _components_component__WEBPACK_IMPORTED_MODULE_0__.Component.nextId}, ...trenderConfig}),\r\n        _components_tooltip__WEBPACK_IMPORTED_MODULE_2__.Tooltip.instance,\r\n        _components_hover__WEBPACK_IMPORTED_MODULE_11__.Hover.instance,\r\n        _components_context_menu__WEBPACK_IMPORTED_MODULE_6__.ContextMenu.instance,\r\n        _components_date_picker__WEBPACK_IMPORTED_MODULE_13__.DatePicker.instance\r\n    ]\r\n];\r\n\r\n_app__WEBPACK_IMPORTED_MODULE_7__.App.instance.render();\r\n\n\n//# sourceURL=webpack://canvas/./index.js?");

/***/ }),

/***/ "./utils.js":
/*!******************!*\
  !*** ./utils.js ***!
  \******************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"debounce\": () => /* binding */ debounce,\n/* harmony export */   \"throttle\": () => /* binding */ throttle,\n/* harmony export */   \"sinusoidGen\": () => /* binding */ sinusoidGen,\n/* harmony export */   \"timeFormat\": () => /* binding */ timeFormat,\n/* harmony export */   \"dateFormat\": () => /* binding */ dateFormat\n/* harmony export */ });\nfunction debounce(threshold = 100) {\r\n    let timeout = 0;\r\n    return (fn, arg) => {\r\n        clearTimeout(timeout);\r\n        timeout = setTimeout(fn, threshold, arg);\r\n    }\r\n}\r\n\r\nfunction throttle(threshold = 100) {\r\n    let timeout = true;\r\n    setInterval(() => timeout = true, threshold);\r\n    return (fn, arg) => {\r\n        timeout && fn(arg);\r\n        timeout = false;\r\n    };\r\n}\r\n\r\nconst sinusoidGen = (function* () {\r\n    const period = Math.PI * 2;\r\n    const q = 0.5;\r\n    let _i = 0;\r\n    while (true) yield Math.round(Math.sin(_i++ * q % period) * 10000) / 100;\r\n})();\r\n\r\nconst timeFormat = (timeFormatter => {\r\n    return time => timeFormatter.format(time);\r\n})(new Intl.DateTimeFormat('en', {hour: '2-digit', minute: '2-digit', second: '2-digit'}));\r\n\r\nconst dateFormat = (dateFormatter => {\r\n    return date => dateFormatter.format(date);\r\n})(new Intl.DateTimeFormat('en', {day: '2-digit', month: '2-digit', year: 'numeric'}));\r\n\r\n\r\n\n\n//# sourceURL=webpack://canvas/./utils.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		if(__webpack_module_cache__[moduleId]) {
/******/ 			return __webpack_module_cache__[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop)
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	// startup
/******/ 	// Load entry module
/******/ 	__webpack_require__("./index.js");
/******/ 	// This entry module used 'exports' so it can't be inlined
/******/ })()
;